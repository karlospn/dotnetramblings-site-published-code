<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code-Maze.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/code-maze.com/</link>
    <description>Recent content in Code-Maze.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Sun, 14 Apr 2024 06:12:59 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/code-maze.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Detect if a Key is Pressed in a C# Console Application</title>
      <link>https://www.dotnetramblings.com/post/14_04_2024/14_04_2024_0/</link>
      <pubDate>Sun, 14 Apr 2024 06:12:59 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/14_04_2024/14_04_2024_0/</guid>
      <description>
        
          
            We frequently read data from user input in our C# application. However, we sometimes need to detect a key press and continue the operation. In this article, we discuss how to detect if a key is pressed in a C# console application. By understanding the usage of these features, we can create interactive and responsive […] The post How to Detect if a Key is Pressed in a C# Console Application appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Improvements in the Using Directive for Additional Types in C#</title>
      <link>https://www.dotnetramblings.com/post/13_04_2024/13_04_2024_0/</link>
      <pubDate>Sat, 13 Apr 2024 05:44:04 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/13_04_2024/13_04_2024_0/</guid>
      <description>
        
          
            The “using” directive in C# helps us reduce boilerplate code when referencing types and members that sit outside the context of our class. C# 12 further expanded on the using directive, allowing it to be used for additional types. In this article, we’ll start by looking at how “using” has been used so far in […] The post Improvements in the Using Directive for Additional Types in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Code Maze Weekly #209</title>
      <link>https://www.dotnetramblings.com/post/12_04_2024/12_04_2024_5/</link>
      <pubDate>Fri, 12 Apr 2024 08:58:07 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/12_04_2024/12_04_2024_5/</guid>
      <description>
        
          
            Issue #209 of the Code Maze weekly. Check out what’s new this week and enjoy the read. .NET and C# Top Picks 6 Types of Constructors in C# [codingsonata.com] Let’s go over the basics and see which constructors we have available in C# with Aram Tchekrekjian. Can you name them all (think C#12 as well)? […] The post Code Maze Weekly #209 appeared first on Code Maze.
Link to article: https://code-maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Test gRPC Services in ASP.NET Core</title>
      <link>https://www.dotnetramblings.com/post/12_04_2024/12_04_2024_7/</link>
      <pubDate>Fri, 12 Apr 2024 05:29:48 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/12_04_2024/12_04_2024_7/</guid>
      <description>
        
          
            gRPC is a popular way to create fast and scalable API’s in the .NET world. In this article, we explore how to test gRPC Services in .NET applications, and set up both unit and integration tests to ensure the reliability and performance of gRPC services. So let’s start. What is gRPC? In general, gRPC is […] The post How to Test gRPC Services in ASP.NET Core appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Set a Default User-Agent on an HttpClient in ASP.NET Core</title>
      <link>https://www.dotnetramblings.com/post/11_04_2024/11_04_2024_6/</link>
      <pubDate>Thu, 11 Apr 2024 05:09:21 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/11_04_2024/11_04_2024_6/</guid>
      <description>
        
          
            In this article, we will learn about the User-Agent header used while making HTTP calls. Then, we will understand how to set the default User-Agent on an HttpClient. Let’s start. What Is a User-Agent Header? Before we learn to set User-Agent on HttpClient, let’s understand the basics. The user agent is a set of strings […] The post How to Set a Default User-Agent on an HttpClient in ASP.NET Core appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Validate File Upload Extensions in ASP.NET Core</title>
      <link>https://www.dotnetramblings.com/post/09_04_2024/09_04_2024_9/</link>
      <pubDate>Tue, 09 Apr 2024 05:49:27 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/09_04_2024/09_04_2024_9/</guid>
      <description>
        
          
            In this article, we will see how we can validate file upload extensions and be certain that our applications are safe from malicious uploads. When receiving files uploaded by users, relying solely on file names to determine file types is risky. This is because we can easily fake file types by replacing their extensions. Therefore, […] The post How to Validate File Upload Extensions in ASP.NET Core appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Handling Circular References When Working With JSON in .NET</title>
      <link>https://www.dotnetramblings.com/post/08_04_2024/08_04_2024_9/</link>
      <pubDate>Mon, 08 Apr 2024 05:56:16 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/08_04_2024/08_04_2024_9/</guid>
      <description>
        
          
            When working with JSON (JavaScript Object Notation) in .NET applications, developers often encounter challenges related to circular references, where objects circularly reference each other. In this article, we’ll explore common scenarios involving circular references in .NET applications and discuss techniques for effectively handling them. We will use System.Text.Json for serialization and deserialization, one of the […] The post Handling Circular References When Working With JSON in .NET appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>The Best Way to Assign an Initial Value to Auto-Properties in C#</title>
      <link>https://www.dotnetramblings.com/post/07_04_2024/07_04_2024_0/</link>
      <pubDate>Sun, 07 Apr 2024 07:07:23 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/07_04_2024/07_04_2024_0/</guid>
      <description>
        
          
            In this article, we will explore auto-properties and various ways to assign an initial value to it in C#. The C# programming language supports the Auto-Properties feature from version 3.0. In almost every C# application we use auto-property because it enables a more concise way to declare the property. What Is an Auto-Property in C#? […] The post The Best Way to Assign an Initial Value to Auto-Properties in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
