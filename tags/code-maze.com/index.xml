<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code-Maze.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/code-maze.com/</link>
    <description>Recent content in Code-Maze.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Mon, 16 Dec 2024 04:28:02 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/code-maze.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comparison of Rebus, NServiceBus, and MassTransit in .NET</title>
      <link>https://www.dotnetramblings.com/post/16_12_2024/16_12_2024_12/</link>
      <pubDate>Mon, 16 Dec 2024 04:28:02 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/16_12_2024/16_12_2024_12/</guid>
      <description>
        
          
            Messaging systems are the backbone of scalable and distributed applications in .NET. They allow different parts of an application, or even separate applications, to communicate efficiently and reliably. Choosing the right messaging library, Rebus, NServiceBus, or MassTransit, is essential to ensure our system’s performance and long-term maintainability. In this article, we will compare Rebus, NServiceBus, […] The post Comparison of Rebus, NServiceBus, and MassTransit in .NET appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Chain of Responsibility Design Pattern in C#</title>
      <link>https://www.dotnetramblings.com/post/09_12_2024/09_12_2024_11/</link>
      <pubDate>Mon, 09 Dec 2024 06:56:56 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/09_12_2024/09_12_2024_11/</guid>
      <description>
        
          
            In this article, we will talk about the Chain of Responsibility Design Pattern. We are going to see how to implement this pattern in C# and how it can solve certain design problems. Let’s start. What is The Chain of Responsibility Design Pattern? Chain of Responsibility is a behavioral pattern that helps us design a […] The post Chain of Responsibility Design Pattern in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
