<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code-Maze.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/code-maze.com/</link>
    <description>Recent content in Code-Maze.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 09 Jul 2024 01:37:30 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/code-maze.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Improve Entity Framework Core Performance with Complex Types</title>
      <link>https://www.dotnetramblings.com/post/09_07_2024/09_07_2024_10/</link>
      <pubDate>Tue, 09 Jul 2024 01:37:30 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/09_07_2024/09_07_2024_10/</guid>
      <description>
        
          
            In this article, let’s explore what Complex Types are in Entity Framework Core and how we can use them to improve the performance of our .NET applications. Without further ado, let’s get started. What Are Complex Types in EF Core? To begin, let’s first understand what complex types are and why they were added to […] The post Improve Entity Framework Core Performance with Complex Types appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Find All the Positions of a Substring in Another String in C#</title>
      <link>https://www.dotnetramblings.com/post/08_07_2024/08_07_2024_11/</link>
      <pubDate>Mon, 08 Jul 2024 05:03:44 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/08_07_2024/08_07_2024_11/</guid>
      <description>
        
          
            In this article, we are going to learn how to find all the positions of a substring in another string. So we are trying to find, for example, all the occurrences of the word ‘the’ in a sentence: “Some consider the occurrences to be the unconscious mind’s attempts to communicate to the conscious mind.” Searching Substrings to Find All the Positions […] The post How to Find All the Positions of a Substring in Another String in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Read appsettings.json in a .NET Console Application</title>
      <link>https://www.dotnetramblings.com/post/04_07_2024/04_07_2024_3/</link>
      <pubDate>Thu, 04 Jul 2024 06:12:19 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/04_07_2024/04_07_2024_3/</guid>
      <description>
        
          
            In this article, we will learn how to read appsettings.json in a .NET console application. Explanation Of appsettings.json The appsettings.json file in .NET applications serves as a centralized repository for configuration settings, utilizing the JSON format for its simplicity and readability. It includes various hierarchically organized sections, such as logging levels, connection strings, and custom application […] The post How to Read appsettings.json in a .NET Console Application appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Bridge Design Pattern in C#</title>
      <link>https://www.dotnetramblings.com/post/02_07_2024/02_07_2024_16/</link>
      <pubDate>Tue, 02 Jul 2024 05:14:06 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/02_07_2024/02_07_2024_16/</guid>
      <description>
        
          
            In this article, we are going to talk about a structural design pattern, the Bridge Pattern. We will discuss what problem this pattern solves and how to implement it in C#. If you want to read more about design patterns in C#, you can inspect our C# Design Patterns page. Let’s start. What is The Bridge Design […] The post Bridge Design Pattern in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
