<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code-Maze.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/code-maze.com/</link>
    <description>Recent content in Code-Maze.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 02 Jul 2024 05:14:06 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/code-maze.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bridge Design Pattern in C#</title>
      <link>https://www.dotnetramblings.com/post/02_07_2024/02_07_2024_1/</link>
      <pubDate>Tue, 02 Jul 2024 05:14:06 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/02_07_2024/02_07_2024_1/</guid>
      <description>
        
          
            In this article, we are going to talk about a structural design pattern, the Bridge Pattern. We will discuss what problem this pattern solves and how to implement it in C#. If you want to read more about design patterns in C#, you can inspect our C# Design Patterns page. Let’s start. What is The Bridge Design […] The post Bridge Design Pattern in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Local Functions vs Lambda Expressions in C#</title>
      <link>https://www.dotnetramblings.com/post/01_07_2024/01_07_2024_14/</link>
      <pubDate>Mon, 01 Jul 2024 05:54:02 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/01_07_2024/01_07_2024_14/</guid>
      <description>
        
          
            In this article, we’ll discuss the differences between local functions and lambda expressions in C#. Let’s start. Lambda Expressions Lambda expressions are anonymous functions. They are short blocks of code that accept parameters and return a value. We can assign the lambda expression to a variable or pass it as a parameter. We define lambda […] The post Local Functions vs Lambda Expressions in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Conditionally Add Middleware in ASP.NET Core</title>
      <link>https://www.dotnetramblings.com/post/28_06_2024/28_06_2024_10/</link>
      <pubDate>Fri, 28 Jun 2024 06:32:32 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/28_06_2024/28_06_2024_10/</guid>
      <description>
        
          
            In this article, we’ll explore different techniques on how to conditionally add middleware in ASP.NET Core applications. Let’s start! Conditional Middleware: Why and When? Conditional middleware in ASP.NET Core is crucial for dynamically adapting our application behavior based on the runtime environment or specific request details. Let’s take a look at the key scenarios where […] The post Conditionally Add Middleware in ASP.NET Core appeared first on Code Maze.
Link to article: https://code-maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Multitenancy in .NET With Orchard Core</title>
      <link>https://www.dotnetramblings.com/post/25_06_2024/25_06_2024_15/</link>
      <pubDate>Tue, 25 Jun 2024 06:08:36 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/25_06_2024/25_06_2024_15/</guid>
      <description>
        
          
            Orchard Core, a multipurpose open-source platform built upon ASP.NET Core, offers strong support for multi-tenancy. This article explores the installation and configuration of Orchard Core for multitenancy .NET applications, as well as the setup of multitenancy through its admin dashboard and framework. Additionally, we’ll look into the integration of features and modules to extend our […] The post Multitenancy in .NET With Orchard Core appeared first on Code Maze.
Link to article: https://code-maze.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
