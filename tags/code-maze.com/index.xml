<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code-Maze.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/code-maze.com/</link>
    <description>Recent content in Code-Maze.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Fri, 24 May 2024 05:35:01 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/code-maze.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How Does the Default ASP.NET Core Identity Password Hasher Work?</title>
      <link>https://www.dotnetramblings.com/post/24_05_2024/24_05_2024_5/</link>
      <pubDate>Fri, 24 May 2024 05:35:01 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/24_05_2024/24_05_2024_5/</guid>
      <description>
        
          
            In this article, we will delve into the default ASP.NET Core Identity Password Hasher. We will focus on understanding how it transforms plain text passwords into secure hashes and highlighting its security features. Let’s dive in. How the Password Hashing Process Works When discussing password hashing, we typically consider two scenarios. Firstly, when a user […] The post How Does the Default ASP.NET Core Identity Password Hasher Work? appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Compare Two Files in C#</title>
      <link>https://www.dotnetramblings.com/post/23_05_2024/23_05_2024_9/</link>
      <pubDate>Thu, 23 May 2024 06:11:37 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/23_05_2024/23_05_2024_9/</guid>
      <description>
        
          
            In this article, we will learn how to compare two files in C#. There are several reasons why we might want to compare two files in our code, such as integrity checks, detecting duplicate files, version control, synchronization, and more. But what are the different ways we can compare two files using C#, and why […] The post How to Compare Two Files in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Set Global Default JSON Serialization Options in .NET</title>
      <link>https://www.dotnetramblings.com/post/22_05_2024/22_05_2024_12/</link>
      <pubDate>Wed, 22 May 2024 05:23:01 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/22_05_2024/22_05_2024_12/</guid>
      <description>
        
          
            JSON serialization is the process of transforming .NET objects into JSON format, which ensures data exchange within applications. Implementing global default JSON serialization settings in ASP.NET Core Web API maintains uniformity across applications. In this article, we’ll explore the various methods for setting global default JSON serialization options in the ASP.NET Core Web API. Before […] The post How to Set Global Default JSON Serialization Options in .NET appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Real-Time .NET Error Reporting With Exceptionless</title>
      <link>https://www.dotnetramblings.com/post/21_05_2024/21_05_2024_19/</link>
      <pubDate>Tue, 21 May 2024 05:56:01 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/21_05_2024/21_05_2024_19/</guid>
      <description>
        
          
            In this article, we are going to cover the Exceptionless library and see how to use it in an ASP.NET Core application. So let’s get started. What Is Exceptionless? Exceptionless is an open-source error and event reporting service. Once integrated into our applications, it helps us monitor and fix the exceptions that happen inside it. […] The post Real-Time .NET Error Reporting With Exceptionless appeared first on Code Maze.
Link to article: https://code-maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Filter a List Based on Another List In C#</title>
      <link>https://www.dotnetramblings.com/post/20_05_2024/20_05_2024_12/</link>
      <pubDate>Mon, 20 May 2024 05:51:49 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/20_05_2024/20_05_2024_12/</guid>
      <description>
        
          
            Lists in C# are one of the most ubiquitous data structures. We perform all kinds of operations on them, such as appending, inserting, removing, sorting, and filtering. In this article, we’ll focus on the latter – filtering. In particular, we’ll see how to use a list to filter other lists. We can achieve it in […] The post How to Filter a List Based on Another List In C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>View-Based Authorization in ASP.NET Core</title>
      <link>https://www.dotnetramblings.com/post/19_05_2024/19_05_2024_3/</link>
      <pubDate>Sun, 19 May 2024 06:26:30 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/19_05_2024/19_05_2024_3/</guid>
      <description>
        
          
            View-based authorization is an authorization strategy that enables us to manage UI elements’ visibility based on the user’s identity. In this article, we’ll take a look at how we can achieve view-based authorization in an ASP.NET core application. Let’s begin. What Is Authorization? Before we dive deeper into the implementation of view-based authorization, let’s take […] The post View-Based Authorization in ASP.NET Core appeared first on Code Maze.
Link to article: https://code-maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Add a Cookie to an HttpClient Request/Response in ASP.NET Core</title>
      <link>https://www.dotnetramblings.com/post/18_05_2024/18_05_2024_2/</link>
      <pubDate>Sat, 18 May 2024 04:26:36 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/18_05_2024/18_05_2024_2/</guid>
      <description>
        
          
            What are cookies? Websites send small pieces of text, known as internet cookies, to our browsers whenever we visit them. They help us have a personalized experience on that particular website and remember it for the next time we visit it. Our goal today is how to make that happen in ASP.NET Core. In this […] The post Add a Cookie to an HttpClient Request/Response in ASP.NET Core appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Using Source Generators to Validate IOptions in ASP.NET Core</title>
      <link>https://www.dotnetramblings.com/post/17_05_2024/17_05_2024_11/</link>
      <pubDate>Fri, 17 May 2024 02:53:30 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/17_05_2024/17_05_2024_11/</guid>
      <description>
        
          
            In this article, we’ll look at how to use source generators to validate IOptions and ensure they meet the required configuration expectations. Let’s dive in! Why We Need to Validate IOptions In ASP.NET Core we have ample choice when it comes to configuration providers. This gives us freedom when choosing a way to set our […] The post Using Source Generators to Validate IOptions in ASP.NET Core appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
