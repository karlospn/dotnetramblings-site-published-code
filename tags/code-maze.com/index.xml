<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code-Maze.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/code-maze.com/</link>
    <description>Recent content in Code-Maze.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Thu, 30 May 2024 05:16:09 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/code-maze.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Lookup in C#</title>
      <link>https://www.dotnetramblings.com/post/30_05_2024/30_05_2024_16/</link>
      <pubDate>Thu, 30 May 2024 05:16:09 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/30_05_2024/30_05_2024_16/</guid>
      <description>
        
          
            When we build our .NET applications, we commonly use dictionaries to store data as key-value pairs. However, dictionaries do not allow us to map multiple values to a single key. In this article, let’s explore the Lookup class in C# and discuss how we can use it to handle this challenge. Without further ado, let’s […] The post Lookup in C# appeared first on Code Maze.
Link to article: https://code-maze.com/csharp-lookup/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Modular Monolith Architecture In .NET</title>
      <link>https://www.dotnetramblings.com/post/29_05_2024/29_05_2024_16/</link>
      <pubDate>Wed, 29 May 2024 06:24:01 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/29_05_2024/29_05_2024_16/</guid>
      <description>
        
          
            In this article, we will discuss the concept of Modular Monolith Applications, and how they compare with traditional Monoliths and Microservices. We will also explain the different communication patterns we can implement between our modules. In the last decade, most enterprise businesses have switched from monolith applications to microservice applications because monolith applications have coupling […] The post Modular Monolith Architecture In .NET appeared first on Code Maze.
Link to article: https://code-maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Fastest Ways to Perform Base 10 Conversions in C#</title>
      <link>https://www.dotnetramblings.com/post/28_05_2024/28_05_2024_15/</link>
      <pubDate>Tue, 28 May 2024 05:45:01 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/28_05_2024/28_05_2024_15/</guid>
      <description>
        
          
            Performing base 10 conversions is fundamental when learning basic computer science and mathematical concepts. Since we know computer systems understand binary, such conversions can help us form different number representations that we can use for various applications such as encoding and cryptography. In this article, we will explore the fastest way to convert a base […] The post Fastest Ways to Perform Base 10 Conversions in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Compare Two Dictionaries in C#</title>
      <link>https://www.dotnetramblings.com/post/27_05_2024/27_05_2024_7/</link>
      <pubDate>Mon, 27 May 2024 05:27:37 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/27_05_2024/27_05_2024_7/</guid>
      <description>
        
          
            In this article, we will first explore several ways to compare two dictionaries in C#. Then, we will compare and rank the performance of these approaches using the BenchmarkDotNet library. When we work with Dictionary objects in C#, checking their equality is a common task we’re likely to encounter. Without further ado, let’s get started. […] The post How to Compare Two Dictionaries in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Using Delegating Handlers to Extend HttpClient in ASP.NET Core</title>
      <link>https://www.dotnetramblings.com/post/26_05_2024/26_05_2024_2/</link>
      <pubDate>Sun, 26 May 2024 05:44:11 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/26_05_2024/26_05_2024_2/</guid>
      <description>
        
          
            In this article, we’ll explore HttpClient’s delegating handlers in ASP.NET Core. These handlers act as a middleware pipeline for HTTP requests and responses, allowing us to intercept, process, and modify HTTP traffic before it reaches external applications. What Are Delegating Handlers? Delegating Handlers in HttpClient closely resembles ASP.NET Core’s middleware architecture. Each handler processes incoming […] The post Using Delegating Handlers to Extend HttpClient in ASP.NET Core appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Introduction to the StronglyTypedId Package in .NET</title>
      <link>https://www.dotnetramblings.com/post/25_05_2024/25_05_2024_2/</link>
      <pubDate>Sat, 25 May 2024 05:40:45 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/25_05_2024/25_05_2024_2/</guid>
      <description>
        
          
            In this article, we’ll look at the StronglyTypedId NuGet package and how it helps us enhance type safety and code readability in our .NET projects by generating strongly-typed IDs for our entities. Let’s get started. Benefits of Using StronglyTypedId Before we look at how to install and utilize the StronglyTypedId NuGet package, let’s consider why […] The post Introduction to the StronglyTypedId Package in .NET appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How Does the Default ASP.NET Core Identity Password Hasher Work?</title>
      <link>https://www.dotnetramblings.com/post/24_05_2024/24_05_2024_7/</link>
      <pubDate>Fri, 24 May 2024 05:35:01 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/24_05_2024/24_05_2024_7/</guid>
      <description>
        
          
            In this article, we will delve into the default ASP.NET Core Identity Password Hasher. We will focus on understanding how it transforms plain text passwords into secure hashes and highlighting its security features. Let’s dive in. How the Password Hashing Process Works When discussing password hashing, we typically consider two scenarios. Firstly, when a user […] The post How Does the Default ASP.NET Core Identity Password Hasher Work? appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Compare Two Files in C#</title>
      <link>https://www.dotnetramblings.com/post/23_05_2024/23_05_2024_9/</link>
      <pubDate>Thu, 23 May 2024 06:11:37 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/23_05_2024/23_05_2024_9/</guid>
      <description>
        
          
            In this article, we will learn how to compare two files in C#. There are several reasons why we might want to compare two files in our code, such as integrity checks, detecting duplicate files, version control, synchronization, and more. But what are the different ways we can compare two files using C#, and why […] The post How to Compare Two Files in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
