<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code-Maze.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/code-maze.com/</link>
    <description>Recent content in Code-Maze.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Wed, 05 Jun 2024 05:56:59 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/code-maze.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Comparing ExecuteAsync() and StartAsync() Methods from the BackgroundService Class in .NET</title>
      <link>https://www.dotnetramblings.com/post/05_06_2024/05_06_2024_9/</link>
      <pubDate>Wed, 05 Jun 2024 05:56:59 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/05_06_2024/05_06_2024_9/</guid>
      <description>
        
          
            Due to the emerging significance of running background tasks, .NET Core has given us new ways of achieving it. BackgroundService is another tool in our toolbox with methods ExecuteAsync() and StartAsync() being the central components. In this article, we will compare these methods and demonstrate when and how to use them. We will first introduce […] The post Comparing ExecuteAsync() and StartAsync() Methods from the BackgroundService Class in .NET appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Mock IConfiguration.GetValue in ASP.NET Core</title>
      <link>https://www.dotnetramblings.com/post/04_06_2024/04_06_2024_17/</link>
      <pubDate>Tue, 04 Jun 2024 05:26:57 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/04_06_2024/04_06_2024_17/</guid>
      <description>
        
          
            In this article, we’ll take a closer look at how we can mock IConfiguration.GetValue when writing unit tests in ASP.NET Core. Let’s start! Mock IConfiguration.GetValue in ASP.NET Core Before we start mocking, we need a class that utilizes IConfiguration: public class FinanceService(IConfiguration configuration) : IFinanceService { public double CalculateTotalAmount(double hours) { var hourlyRate = configuration.GetValue(&amp;quot;FinanceSettings:HourlyRate&amp;quot;); […] The post How to Mock IConfiguration.GetValue in ASP.NET Core appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Embedded Resources in .NET</title>
      <link>https://www.dotnetramblings.com/post/03_06_2024/03_06_2024_14/</link>
      <pubDate>Mon, 03 Jun 2024 06:48:05 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/03_06_2024/03_06_2024_14/</guid>
      <description>
        
          
            We’ve covered resources in a couple of our previous articles. In Localization in ASP.NET Core, we delved into .NET localization, touching upon resources since XML files utilized for localization fall under .NET resources. We also discussed resources in our article, How to Read a String From a .resx (Resource) File in C#, where we explored […] The post Embedded Resources in .NET appeared first on Code Maze.
Link to article: https://code-maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Print a 2D Array to the Console in C#</title>
      <link>https://www.dotnetramblings.com/post/02_06_2024/02_06_2024_0/</link>
      <pubDate>Sun, 02 Jun 2024 05:46:42 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/02_06_2024/02_06_2024_0/</guid>
      <description>
        
          
            In this article, we will learn how to print a 2D array to the console using C#. Whether we are handling complex data structures or simply organizing information efficiently, understanding how to manipulate 2D arrays is a valuable skill. Let’s begin. Understanding 2D Arrays First, let’s understand what 2D arrays are. A 2D or two-dimensional […] The post How to Print a 2D Array to the Console in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Getting Started With EasyCaching in ASP.NET Core</title>
      <link>https://www.dotnetramblings.com/post/01_06_2024/01_06_2024_1/</link>
      <pubDate>Sat, 01 Jun 2024 05:51:58 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/01_06_2024/01_06_2024_1/</guid>
      <description>
        
          
            EasyCaching is an open-source caching library that helps us manage caching more easily, and flexibly and it’s an alternative to ASP.NET Core’s out-of-the-box caching library. Caching is a prevalent and useful technique for improving the performance of web applications. By caching frequently accessed data, you can minimize the frequent use of SQL queries, API calls, […] The post Getting Started With EasyCaching in ASP.NET Core appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Set the Exit Code for a Console Application in .NET</title>
      <link>https://www.dotnetramblings.com/post/31_05_2024/31_05_2024_6/</link>
      <pubDate>Fri, 31 May 2024 05:19:59 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/31_05_2024/31_05_2024_6/</guid>
      <description>
        
          
            In this article, we will learn how to set the exit code for a console application in .NET. Let’s dive in. What Are Exit Codes Exit codes are integer values we return after executing a process. A zero exit code usually indicates success, while a non-zero code indicates an error. For a complete list of […] The post How to Set the Exit Code for a Console Application in .NET appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Lookup in C#</title>
      <link>https://www.dotnetramblings.com/post/30_05_2024/30_05_2024_13/</link>
      <pubDate>Thu, 30 May 2024 05:16:09 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/30_05_2024/30_05_2024_13/</guid>
      <description>
        
          
            When we build our .NET applications, we commonly use dictionaries to store data as key-value pairs. However, dictionaries do not allow us to map multiple values to a single key. In this article, let’s explore the Lookup class in C# and discuss how we can use it to handle this challenge. Without further ado, let’s […] The post Lookup in C# appeared first on Code Maze.
Link to article: https://code-maze.com/csharp-lookup/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Modular Monolith Architecture In .NET</title>
      <link>https://www.dotnetramblings.com/post/29_05_2024/29_05_2024_16/</link>
      <pubDate>Wed, 29 May 2024 06:24:01 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/29_05_2024/29_05_2024_16/</guid>
      <description>
        
          
            In this article, we will discuss the concept of Modular Monolith Applications, and how they compare with traditional Monoliths and Microservices. We will also explain the different communication patterns we can implement between our modules. In the last decade, most enterprise businesses have switched from monolith applications to microservice applications because monolith applications have coupling […] The post Modular Monolith Architecture In .NET appeared first on Code Maze.
Link to article: https://code-maze.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
