<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code-Maze.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/code-maze.com/</link>
    <description>Recent content in Code-Maze.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Mon, 16 Sep 2024 02:55:15 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/code-maze.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mediator Design Pattern in C#</title>
      <link>https://www.dotnetramblings.com/post/16_09_2024/16_09_2024_5/</link>
      <pubDate>Mon, 16 Sep 2024 02:55:15 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/16_09_2024/16_09_2024_5/</guid>
      <description>
        
          
            In this article, we are going to talk about a popular design pattern, the Mediator Pattern. We will see how this pattern helps address some design problems and how to implement it in C#. Let’s start. What is The Mediator Design Pattern? Mediator is a behavioral design pattern that promotes loose coupling by eliminating chaotic […] The post Mediator Design Pattern in C# appeared first on Code Maze.
Link to article: https://code-maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Manage Background Tasks With The IHostedLifecycleService Interface</title>
      <link>https://www.dotnetramblings.com/post/12_09_2024/12_09_2024_20/</link>
      <pubDate>Thu, 12 Sep 2024 06:01:12 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/12_09_2024/12_09_2024_20/</guid>
      <description>
        
          
            In this article, we’ll describe the IHostedLifecycleService interface. We’ll see how it extends the IHostedService interface and enables finer control over the hosted service lifecycle. Finally, we’ll show some practical use cases for the IHostedLifecycleService interface. Let’s get started. What Is the IHostedService Interface The IHostedService interface is a powerful feature in .NET that enables […] The post Manage Background Tasks With The IHostedLifecycleService Interface appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>SIMD Accelerated Numeric Types in C#</title>
      <link>https://www.dotnetramblings.com/post/09_09_2024/09_09_2024_16/</link>
      <pubDate>Mon, 09 Sep 2024 05:00:34 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/09_09_2024/09_09_2024_16/</guid>
      <description>
        
          
            In this article, let’s explore the various SIMD (Single Instruction, Multiple Data) accelerated numeric types in .NET. We’ll start by examining what SIMD stands for and how it works in .NET. Then, we’ll look at the different SIMD accelerated numeric types available in .NET. To conclude, we’ll implement a benchmark to compare the performance of […] The post SIMD Accelerated Numeric Types in C# appeared first on Code Maze.
Link to article: https://code-maze.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
