<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code-Maze.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/code-maze.com/</link>
    <description>Recent content in Code-Maze.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Wed, 19 Jun 2024 06:21:44 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/code-maze.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Use FakeLogger to Test Logging Code in .NET</title>
      <link>https://www.dotnetramblings.com/post/19_06_2024/19_06_2024_11/</link>
      <pubDate>Wed, 19 Jun 2024 06:21:44 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/19_06_2024/19_06_2024_11/</guid>
      <description>
        
          
            In software development, logging, and unit testing serve as foundational tools, each actively contributing to the reliability and functionality of our applications. While unit testing promptly alerts us to changes in our application’s business logic, logging actively monitors errors, performance metrics, and runtime execution flow. Despite their significance, many development workflows often overlook their incorporation. […] The post How to Use FakeLogger to Test Logging Code in .NET appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Ignore a Property in AutoMapper</title>
      <link>https://www.dotnetramblings.com/post/18_06_2024/18_06_2024_13/</link>
      <pubDate>Tue, 18 Jun 2024 05:34:41 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/18_06_2024/18_06_2024_13/</guid>
      <description>
        
          
            In this article, we will explore key techniques to ignore property in AutoMapper. We will use the Ignore() method, the Ignore attribute, and the DoNotValidate() method. We will also discuss when and how to use each of the methods mentioned. Without further ado, let’s start! When to Ignore a Property in AutoMapper Ignoring properties during […] The post How to Ignore a Property in AutoMapper appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Flattening Nested Collections in C#</title>
      <link>https://www.dotnetramblings.com/post/17_06_2024/17_06_2024_10/</link>
      <pubDate>Mon, 17 Jun 2024 05:31:23 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/17_06_2024/17_06_2024_10/</guid>
      <description>
        
          
            In this article, we’ll explore flattening nested collections in C#. We’ll examine different approaches for handling from simple to complex data structures, offering practical guidance to effectively flatten nested collections within our C# applications. Let’s get started. Importance of Flattening Nested Collections Nested collections can introduce unnecessary complexity, making it challenging to work with the […] The post Flattening Nested Collections in C# appeared first on Code Maze.
Link to article: https://code-maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>How to Properly Set Connection Strings in ASP.NET Core</title>
      <link>https://www.dotnetramblings.com/post/15_06_2024/15_06_2024_1/</link>
      <pubDate>Sat, 15 Jun 2024 06:19:04 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/15_06_2024/15_06_2024_1/</guid>
      <description>
        
          
            In this article, we will delve into connection strings providing insights into their functionality, and best practices for safeguarding sensitive data. Let’s dive in! Purpose and Components of Connection Strings Connection strings are the backbone of a connection between our application and a database, encapsulating important information such as server address, database name, and authentication […] The post How to Properly Set Connection Strings in ASP.NET Core appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Find Differences Between Collections With the LINQ Except Method in C#</title>
      <link>https://www.dotnetramblings.com/post/14_06_2024/14_06_2024_5/</link>
      <pubDate>Fri, 14 Jun 2024 06:27:12 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/14_06_2024/14_06_2024_5/</guid>
      <description>
        
          
            When working with collections in C#, we sometimes need to manipulate them by performing operations such as comparisons, mergers, or finding set differences between them. The LINQ Except method comes in handy when we want to find the set difference between two sequences, as it returns a new sequence containing elements in the first sequence […] The post Find Differences Between Collections With the LINQ Except Method in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Differences Between Span and Memory in C#</title>
      <link>https://www.dotnetramblings.com/post/13_06_2024/13_06_2024_8/</link>
      <pubDate>Thu, 13 Jun 2024 05:22:05 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/13_06_2024/13_06_2024_8/</guid>
      <description>
        
          
            In this article, we’ll briefly explain the Span and Memory .NET types and mention their primary usage. Furthermore, we will explore the differences between Span and Memory in C# in depth and conclude with some general tips on when to use one type over another. What Is Span? The Span type is a value type […] The post Differences Between Span and Memory in C# appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Adding a Custom Header Parameter to All API Endpoints in Swagger</title>
      <link>https://www.dotnetramblings.com/post/12_06_2024/12_06_2024_11/</link>
      <pubDate>Wed, 12 Jun 2024 05:59:46 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/12_06_2024/12_06_2024_11/</guid>
      <description>
        
          
            Within the .NET ecosystem, Swagger stands out as an essential tool, enabling developers to produce interactive and comprehensive API documentation. Header parameters play a crucial role in carrying important metadata in HTTP requests. Specifically, this metadata includes information like authentication tokens and custom configurations, shaping how clients and services interact. In this article, we explore […] The post Adding a Custom Header Parameter to All API Endpoints in Swagger appeared first on Code Maze.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
