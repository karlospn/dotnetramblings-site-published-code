<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Milanjovanovic.tech on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/milanjovanovic.tech/</link>
    <description>Recent content in Milanjovanovic.tech on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 12 Aug 2025 11:00:24 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/milanjovanovic.tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The 5 Most Common REST API Design Mistakes (and How to Avoid Them)</title>
      <link>https://www.dotnetramblings.com/post/09_08_2025/09_08_2025_3/</link>
      <pubDate>Sat, 09 Aug 2025 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/09_08_2025/09_08_2025_3/</guid>
      <description>
        
          
            Five REST API design mistakes I see all the time, with practical fixes. Use consistent resource naming, evolve contracts instead of bumping versions, add envelopes, pagination and filtering, return Problem Details, and bake in auth, authz, and rate limits from day one.
Link to article: https://www.milanjovanovic.tech/blog/the-5-most-common-rest-api-design-mistakes-and-how-to-avoid-them 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
