<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Milanjovanovic.tech on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/milanjovanovic.tech/</link>
    <description>Recent content in Milanjovanovic.tech on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Sat, 21 Dec 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/milanjovanovic.tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Scheduling Background Jobs With Quartz in .NET (advanced concepts)</title>
      <link>https://www.dotnetramblings.com/post/21_12_2024/21_12_2024_0/</link>
      <pubDate>Sat, 21 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/21_12_2024/21_12_2024_0/</guid>
      <description>
        
          
            Quartz.NET is a powerful job scheduling library, but integrating it properly with ASP.NET Core requires careful consideration. Here&#39;s what I learned about setting up Quartz.NET with proper observability, persistence, and job scheduling patterns.
Link to article: https://www.milanjovanovic.tech/blog/scheduling-background-jobs-with-quartz-in-dotnet-advanced-concepts 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Internal vs. Public APIs in Modular Monoliths</title>
      <link>https://www.dotnetramblings.com/post/14_12_2024/14_12_2024_0/</link>
      <pubDate>Sat, 14 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/14_12_2024/14_12_2024_0/</guid>
      <description>
        
          
            Every article about modular monoliths tells you to use public APIs between modules, but they rarely explain why these APIs exist or how to design them properly. After building several large-scale modular monoliths, I&#39;ve learned that public APIs are not just about clean code - they&#39;re about controlling chaos.
Link to article: https://www.milanjovanovic.tech/blog/internal-vs-public-apis-in-modular-monoliths 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
