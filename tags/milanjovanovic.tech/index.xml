<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Milanjovanovic.tech on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/milanjovanovic.tech/</link>
    <description>Recent content in Milanjovanovic.tech on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Wed, 02 Jul 2025 19:19:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/milanjovanovic.tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Testcontainers Best Practices for .NET Integration Testing</title>
      <link>https://www.dotnetramblings.com/post/28_06_2025/28_06_2025_2/</link>
      <pubDate>Sat, 28 Jun 2025 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/28_06_2025/28_06_2025_2/</guid>
      <description>
        
          
            Integration tests shouldn&#39;t rely on external infrastructureâ€”but they also shouldn&#39;t mock everything away. In this post, we look at how to use Testcontainers in .NET to spin up real Postgres and Redis instances in your tests, how to manage container lifecycle using IAsyncLifetime, and how to structure your xUnit fixtures for speed and reliability
Link to article: https://www.milanjovanovic.tech/blog/testcontainers-best-practices-dotnet-integration-testing 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
