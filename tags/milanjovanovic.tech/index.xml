<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Milanjovanovic.tech on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/milanjovanovic.tech/</link>
    <description>Recent content in Milanjovanovic.tech on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Sat, 20 Jul 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/milanjovanovic.tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Testing Modular Monoliths: System Integration Testing</title>
      <link>https://www.dotnetramblings.com/post/20_07_2024/20_07_2024_1/</link>
      <pubDate>Sat, 20 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/20_07_2024/20_07_2024_1/</guid>
      <description>
        
          
            System integration testing is the perfect testing approach for modular monoliths. It&#39;s an approach to testing the interactions between various modules within a single system.
Link to article: https://www.milanjovanovic.tech/blog/testing-modular-monoliths-system-integration-testing 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Building Your First Use Case With Clean Architecture</title>
      <link>https://www.dotnetramblings.com/post/13_07_2024/13_07_2024_1/</link>
      <pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/13_07_2024/13_07_2024_1/</guid>
      <description>
        
          
            This is a question I often hear: how do I design my use case with Clean Architecture? In this article, we&#39;ll explore a practical example of how to apply Clean Architecture principles by building a user registration feature.
Link to article: https://www.milanjovanovic.tech/blog/building-your-first-use-case-with-clean-architecture 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
