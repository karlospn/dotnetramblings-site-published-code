<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Markheath.net on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/markheath.net/</link>
    <description>Recent content in Markheath.net on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Sat, 04 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/markheath.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Calling Azure OpenAI models from C# with Microsoft.Extensions.AI</title>
      <link>https://www.dotnetramblings.com/post/04_01_2025/04_01_2025_0/</link>
      <pubDate>Sat, 04 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/04_01_2025/04_01_2025_0/</guid>
      <description>
        
          
            AI opens up a lot of exciting possibilities for developers to use its capabilities within their own applications, but it can feel a bit overwhelming getting started. You have a lot of choices around which models to use and how best to interact with them. In this post I want to go through the steps to implement a basic chat with an LLM hosted in Azure using C#, by taking advantage of the new Microsoft.
          
          
        
      </description>
    </item>
    
    <item>
      <title>AI Coding - What is it good for?</title>
      <link>https://www.dotnetramblings.com/post/30_12_2024/30_12_2024_4/</link>
      <pubDate>Mon, 30 Dec 2024 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/30_12_2024/30_12_2024_4/</guid>
      <description>
        
          
            If you&#39;re like me, 2024 was the year in which using LLM for code generation went from a curiosity that I occasionally tried out when all other avenues failed, to something that has become an essential part of day-to-day development work. Availability and pricing When the year began the availability of these tools was mostly limited to paying customers, but with the majority of LLMs now offering completely free tiers that are perfectly capable of generating code, and now tools like GitHub Copilot (also now offering a free tier) that integrate directly with your IDE, it seems inevitable that in 2025 it will become an integral part of the way most developers write code.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
