<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Build5nines.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/build5nines.com/</link>
    <description>Recent content in Build5nines.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Wed, 31 Jul 2024 12:15:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/build5nines.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using the Terraform ‘merge’ Function</title>
      <link>https://www.dotnetramblings.com/post/31_07_2024/31_07_2024_1/</link>
      <pubDate>Wed, 31 Jul 2024 12:15:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/31_07_2024/31_07_2024_1/</guid>
      <description>
        
          
            One of the core strengths of Terraform is its rich set of built-in functions, which empower users to create flexible and reusable configurations. Among these functions, the Terraform merge function is particularly powerful, enabling the seamless combination of multiple maps or objects into a single, cohesive unit. This chapter delves into the nuances of the […] The article Using the Terraform ‘merge’ Function was originally published on Build5Nines. To stay up-to-date, Subscribe to the Build5Nines Newsletter.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Azure Functions Best Practices for Performance, Reliability and Security</title>
      <link>https://www.dotnetramblings.com/post/29_07_2024/29_07_2024_3/</link>
      <pubDate>Mon, 29 Jul 2024 19:40:35 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/29_07_2024/29_07_2024_3/</guid>
      <description>
        
          
            Building Microservice and Serverless architectures demand different design patterns to be used that other traditional application architectures. Even the older SOA (Service Oriented Architecture) design has different demands than the newer Microservices and Serverless solutions do today. Due to these differences, there are different things to keep in mind when building Microservice and Serverless architectures […] The article Azure Functions Best Practices for Performance, Reliability and Security was originally published on Build5Nines.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
