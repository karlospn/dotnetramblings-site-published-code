<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Damienbod.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/damienbod.com/</link>
    <description>Recent content in Damienbod.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Wed, 15 Jan 2025 08:18:51 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/damienbod.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ASP.NET Core user delegated access token management</title>
      <link>https://www.dotnetramblings.com/post/15_01_2025/15_01_2025_1/</link>
      <pubDate>Wed, 15 Jan 2025 08:18:51 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/15_01_2025/15_01_2025_1/</guid>
      <description>
        
          
            The article looks at managing user delegated access tokens for a downstream API in an ASP.NET Core web application. There are many ways of implementing this, all with advantages and disadvantages. The tokens are requested from an OpenID Connect server using the recommended standards. In this blog, the UI access token from the application authentication [â€¦]
Link to article: https://damienbod.com/2025/01/15/asp-net-core-user-delegated-access-token-management/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
