<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Damienbod.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/damienbod.com/</link>
    <description>Recent content in Damienbod.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Mon, 03 Mar 2025 06:05:18 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/damienbod.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Implement Phone verification, 2FA using ASP.NET Core Identity</title>
      <link>https://www.dotnetramblings.com/post/03_03_2025/03_03_2025_3/</link>
      <pubDate>Mon, 03 Mar 2025 06:05:18 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/03_03_2025/03_03_2025_3/</guid>
      <description>
        
          
            This post shows how to implement phone (SMS) verification and two-factor authentication (2FA) using ASP.NET Core Identity. The solution integrates phone-based verification and 2FA mechanisms. The implementation uses ASP.NET Core Identity’s extensibility to incorporate SMS-based verification during user registration and login processes. SMS is no longer a recommended authentication method due to security risks but […]
Link to article: https://damienbod.com/2025/03/03/implement-phone-verification-2fa-using-asp-net-core-identity/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Use client assertions in OpenID Connect and ASP.NET Core</title>
      <link>https://www.dotnetramblings.com/post/24_02_2025/24_02_2025_13/</link>
      <pubDate>Mon, 24 Feb 2025 06:43:10 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/24_02_2025/24_02_2025_13/</guid>
      <description>
        
          
            Client assertions is a method of client authentication which can be used in OpenID Connect. This provides an alternative to client secrets. This approach enhances security by using signed tokens (JWTs) to authenticate clients during the token request process or the OAuth PAR request. In ASP.NET Core, client assertions is not supported per default, a […]
Link to article: https://damienbod.com/2025/02/24/use-client-assertions-in-openid-connect-and-asp-net-core/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
