<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog.elmah.io on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/blog.elmah.io/</link>
    <description>Recent content in Blog.elmah.io on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 14 Oct 2025 08:42:39 +0200</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/blog.elmah.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How .NET Garbage Collector works (and when you should care)</title>
      <link>https://www.dotnetramblings.com/post/14_10_2025/14_10_2025_15/</link>
      <pubDate>Tue, 14 Oct 2025 08:42:39 +0200</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/14_10_2025/14_10_2025_15/</guid>
      <description>
        
          
            In the world of .NET, memory management is an important aspect of any application. Fortunately, you don&#39;t have to shoulder this immense task yourself. .NET handles it with the superpower of the Garbage Collector (GC). A GC is an engine that keeps your app fast, responsive, and resource-efficient.
Link to article: https://blog.elmah.io/how-net-garbage-collector-works-and-when-you-should-care/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
