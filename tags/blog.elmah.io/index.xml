<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog.elmah.io on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/blog.elmah.io/</link>
    <description>Recent content in Blog.elmah.io on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 03 Jun 2025 08:31:21 +0200</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/blog.elmah.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IEnumerable vs. IAsyncEnumerable in .NET: Streaming vs. Buffering</title>
      <link>https://www.dotnetramblings.com/post/03_06_2025/03_06_2025_12/</link>
      <pubDate>Tue, 03 Jun 2025 08:31:21 +0200</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/03_06_2025/03_06_2025_12/</guid>
      <description>
        
          
            You&#39;ve likely used IEnumerable with EF Core while fetching data from a database. However, have you ever wondered how it loads data from your data set, and if IEnumerable will work fine when the application grows? To find answers, I will break down the core
Link to article: https://blog.elmah.io/ienumerable-vs-iasyncenumerable-in-net-streaming-vs-buffering/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
