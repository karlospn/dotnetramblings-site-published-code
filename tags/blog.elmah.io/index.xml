<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog.elmah.io on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/blog.elmah.io/</link>
    <description>Recent content in Blog.elmah.io on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 22 Jul 2025 12:02:07 +0200</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/blog.elmah.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Result&amp;lt;T&amp;gt; or OneOf&amp;lt;T&amp;gt; for Better Error Handling in .NET</title>
      <link>https://www.dotnetramblings.com/post/22_07_2025/22_07_2025_1/</link>
      <pubDate>Tue, 22 Jul 2025 12:02:07 +0200</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/22_07_2025/22_07_2025_1/</guid>
      <description>
        
          
            Are you tired of debugging vague errors or overusing try-catch? Traditional exception-based workflows can be messy, highly compromising code readability and maintainability. In this post, I will introduce you to Result and OneOf. Two powerful patterns that make success and failure contracts explicit. Whether
Link to article: https://blog.elmah.io/using-result-t-or-oneof-t-for-better-error-handling-in-net/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Lesser-known C# features that can simplify your code</title>
      <link>https://www.dotnetramblings.com/post/15_07_2025/15_07_2025_15/</link>
      <pubDate>Tue, 15 Jul 2025 08:27:08 +0200</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/15_07_2025/15_07_2025_15/</guid>
      <description>
        
          
            C# is a robust OOP language that provides the foundation for building almost every application with .NET. As a C# developer, you are likely familiar with its fundamentals. However, like any legacy technology, it holds more depth to explore and enhance your code&#39;s maintainability and beauty. In this
Link to article: https://blog.elmah.io/lesser-known-c-features-that-can-simplify-your-code/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
