<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog.elmah.io on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/blog.elmah.io/</link>
    <description>Recent content in Blog.elmah.io on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 08 Apr 2025 08:19:03 +0200</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/blog.elmah.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Optimizing JSON Serialization in .NET: Newtonsoft.Json vs. System.Text.Json</title>
      <link>https://www.dotnetramblings.com/post/08_04_2025/08_04_2025_12/</link>
      <pubDate>Tue, 08 Apr 2025 08:19:03 +0200</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/08_04_2025/08_04_2025_12/</guid>
      <description>
        
          
            JavaScript Object Notation (JSON) is a popular data storage and transmitting format. Whether you are a front-end or back-end developer, you must be familiar with it. As a.NET developer, you don&#39;t need an introduction to this text-based data format. The two most prominent libraries are Newtonsoft.Json
Link to article: https://blog.elmah.io/optimizing-json-serialization-in-net-newtonsoft-json-vs-system-text-json/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
