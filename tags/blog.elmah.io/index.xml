<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog.elmah.io on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/blog.elmah.io/</link>
    <description>Recent content in Blog.elmah.io on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 19 Nov 2024 07:50:16 +0100</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/blog.elmah.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Schedule Background Job using Quartz.NET</title>
      <link>https://www.dotnetramblings.com/post/19_11_2024/19_11_2024_17/</link>
      <pubDate>Tue, 19 Nov 2024 07:50:16 +0100</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/19_11_2024/19_11_2024_17/</guid>
      <description>
        
          
            You may have encountered a situation where you must do some backend job without user intervention. For example, in an IOT application, your application needs to receive frequently published data from devices or send scheduler values to devices. .NET provides background job libraries for such tasks. I will discuss one
Link to article: https://blog.elmah.io/schedule-background-job-using-quartz-net/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Exploring C# Records and Their Use Cases</title>
      <link>https://www.dotnetramblings.com/post/12_11_2024/12_11_2024_8/</link>
      <pubDate>Tue, 12 Nov 2024 09:05:53 +0100</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/12_11_2024/12_11_2024_8/</guid>
      <description>
        
          
            In C#, classes historically define types like in any other Object-Oriented Language. Classes define models, encapsulate data and behavior, and organize code. A new block organizer came into play with the launch of C# 9â€”Record. This article will explore C# records with practical code examples. I will also dive
Link to article: https://blog.elmah.io/exploring-c-records-and-their-use-cases/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
