<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog.elmah.io on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/blog.elmah.io/</link>
    <description>Recent content in Blog.elmah.io on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 27 May 2025 08:42:52 +0200</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/blog.elmah.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to run code coverage of .NET code on Azure DevOps</title>
      <link>https://www.dotnetramblings.com/post/27_05_2025/27_05_2025_14/</link>
      <pubDate>Tue, 27 May 2025 08:42:52 +0200</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/27_05_2025/27_05_2025_14/</guid>
      <description>
        
          
            I have a love/hate relationship with measuring code coverage on unit tests. When done right, it can be a powerful and helpful tool. I&#39;ve experienced successful implementations and disasters (more about that in the last part). In this post, I&#39;ll show how you can perform
Link to article: https://blog.elmah.io/how-to-run-code-coverage-of-net-code-on-azure-devops/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
