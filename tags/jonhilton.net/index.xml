<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jonhilton.net on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/jonhilton.net/</link>
    <description>Recent content in Jonhilton.net on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Wed, 20 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/jonhilton.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Finally! Improved Blazor Server reconnection UX</title>
      <link>https://www.dotnetramblings.com/post/20_11_2024/20_11_2024_0/</link>
      <pubDate>Wed, 20 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/20_11_2024/20_11_2024_0/</guid>
      <description>
        
          
            Caution! If youâ€™ve built web apps with Blazor Server the following may cause distress! ðŸ˜… Attempting to reconnect to the serverâ€¦ Reconnection failed. Try reloading the page if youâ€™re unable to reconnect. These are the standard Blazor error messages your users have likely complained about as they interact with your Blazor application. These errors occur because of the connected nature of Blazor server apps. A circuit runs on the server (for a given user interaction), and a SignalR (websocket) connection is maintained between the userâ€™s browser and said circuit.
          
          
        
      </description>
    </item>
    
    <item>
      <title>.NET 9 improves JavaScript module importing for Blazor</title>
      <link>https://www.dotnetramblings.com/post/13_11_2024/13_11_2024_25/</link>
      <pubDate>Wed, 13 Nov 2024 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/13_11_2024/13_11_2024_25/</guid>
      <description>
        
          
            So youâ€™ve set out to build your shiny new web app using Blazor. Blazorâ€™s component model is more than up to the task and you spend a few weeks happily building out UI to meet your requirements. But then you run into a requirement to integrate with a JavaScript library. Curse it! Now you have to figure out how to make calls to a JavaScript library from your Blazor app. This is exactly the kind of requirement that can get complicated, pretty quickly.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
