<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jonhilton.net on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/jonhilton.net/</link>
    <description>Recent content in Jonhilton.net on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Mon, 07 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/jonhilton.net/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Preventing double clicks in Blazor components</title>
      <link>https://www.dotnetramblings.com/post/07_10_2024/07_10_2024_6/</link>
      <pubDate>Mon, 07 Oct 2024 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/07_10_2024/07_10_2024_6/</guid>
      <description>
        
          
            I’ve built a number of online stores over the years and one thing remains true… Customers get pretty annoyed if you charge them twice for the same thing. So how can you avoid such calamity? Well you probably want to architect your backend to reduce the chances of an operation being called twice. For example you might use a session id and block an order from being created/placed if another one has already been created for that session id.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
