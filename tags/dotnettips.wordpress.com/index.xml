<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotnettips.wordpress.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/</link>
    <description>Recent content in Dotnettips.wordpress.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 22 Oct 2024 08:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Boost Your .NET Projects: Maximizing Efficiency in .NET with Spargine’s JsonSerialization Class</title>
      <link>https://www.dotnetramblings.com/post/22_10_2024/22_10_2024_4/</link>
      <pubDate>Tue, 22 Oct 2024 08:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/22_10_2024/22_10_2024_4/</guid>
      <description>
        
          
            Spargine, an open-source .NET 8 project, includes essential assemblies and NuGet packages developed since .NET 2. The JsonSerialization class facilitates efficient JSON operations with methods for serialization, deserialization, and validation.
Link to article: https://dotnettips.wordpress.com/2024/10/22/boost-your-net-projects-maximizing-efficiency-in-net-with-spargines-jsonserialization-class/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Boost Your .NET Projects: Unleashing the Power of Spargine’s Dictionary Extension Methods</title>
      <link>https://www.dotnetramblings.com/post/20_10_2024/20_10_2024_0/</link>
      <pubDate>Sun, 20 Oct 2024 08:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/20_10_2024/20_10_2024_0/</guid>
      <description>
        
          
            Spargine is an open-source set of assemblies and NuGet packages for .NET 8, offering enhanced functionality for IDictionary collection types. The provided extension methods improve performance and reliability in projects. Community involvement and feedback are encouraged for further enhancements. Detailed benchmark results are available on GitHub. Contact dotnetdave@live.com for contributions and inquiries.
Link to article: https://dotnettips.wordpress.com/2024/10/20/boost-your-net-projects-unleashing-the-power-of-spargines-dictionary-extension-methods/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Supercharging .NET Collections with Span and MemoryExtensions</title>
      <link>https://www.dotnetramblings.com/post/15_10_2024/15_10_2024_11/</link>
      <pubDate>Tue, 15 Oct 2024 08:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/15_10_2024/15_10_2024_11/</guid>
      <description>
        
          
            This article discusses optimizing code efficiency in .NET using Span and MemoryExtensions for collection operations. It highlights significant performance improvements in common tasks such as finding, sorting, and reversing collections, demonstrating that these tools minimize memory allocations and enhance speed. Benchmark results underscore substantial advantages in performance and efficiency.
Link to article: https://dotnettips.wordpress.com/2024/10/15/supercharging-net-collections-with-span-and-memoryextensions/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
