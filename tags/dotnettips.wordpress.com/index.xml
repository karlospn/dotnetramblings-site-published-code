<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotnettips.wordpress.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/</link>
    <description>Recent content in Dotnettips.wordpress.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Wed, 01 Oct 2025 12:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rock Your Code: Coding Standards for Microsoft .NET (20th Anniversary Edition)</title>
      <link>https://www.dotnetramblings.com/post/01_10_2025/01_10_2025_8/</link>
      <pubDate>Wed, 01 Oct 2025 12:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/01_10_2025/01_10_2025_8/</guid>
      <description>
        
          
            The 20th Anniversary Edition of Rock Your Code: Coding Standards for Microsoft .NET, authored by David McCarter, is now available on Amazon. This comprehensive guide offers updated standards for .NET 10, best practices, and expert insights, making it essential for software engineers aiming for improved code quality and performance over two decades.
Link to article: https://dotnettips.wordpress.com/2025/10/01/rock-your-code-coding-standards-for-microsoft-net-20th-anniversary-edition/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Optimizing Array Performance in .NET: Getting the Most from ArrayPool</title>
      <link>https://www.dotnetramblings.com/post/01_10_2025/01_10_2025_9/</link>
      <pubDate>Wed, 01 Oct 2025 06:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/01_10_2025/01_10_2025_9/</guid>
      <description>
        
          
            ArrayPool optimizes memory usage by providing a thread-safe pool of reusable arrays, significantly reducing allocations and garbage collection pressure, especially in high-performance scenarios. It&#39;s effective for I/O, serialization, and media processing. Best practices include tight scope management, clearing sensitive data on return, and careful tracking of logical array lengths.
Link to article: https://dotnettips.wordpress.com/2025/10/01/optimizing-array-performance-in-net-getting-the-most-from-arraypool/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Boost Your .NET Projects: Simplify Unique Key Generation with KeyGenerator in Spargine</title>
      <link>https://www.dotnetramblings.com/post/28_09_2025/28_09_2025_1/</link>
      <pubDate>Sun, 28 Sep 2025 06:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/28_09_2025/28_09_2025_1/</guid>
      <description>
        
          
            The KeyGenerator in Spargine is an efficient tool for generating unique keys using GUIDs, ideal for object IDs and database records. It offers methods for creating keys with or without prefixes. This utility simplifies the process of generating unique keys, enhancing workflow in .NET projects, alongside the UlidGenerator for ULIDs.
Link to article: https://dotnettips.wordpress.com/2025/09/28/boost-your-net-projects-simplify-unique-key-generation-with-keygenerator-in-spargine/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
