<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotnettips.wordpress.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/</link>
    <description>Recent content in Dotnettips.wordpress.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Wed, 19 Jun 2024 08:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>256 Seconds with dotNetDave: Documenting Code with Visual Studio and Copilot</title>
      <link>https://www.dotnetramblings.com/post/19_06_2024/19_06_2024_11/</link>
      <pubDate>Wed, 19 Jun 2024 08:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/19_06_2024/19_06_2024_11/</guid>
      <description>
        
          
            In this episode of 256 Seconds with dotNetDave, learn to use Visual Studio and GitHub Copilot to swiftly create detailed XML comments for Microsoft .NET projects. Detailed commands for documenting classes are shared, along with a call to vote for displaying code examples in IntelliSense. Watch the demonstration here: https://player.vimeo.com/video/961522552?badge=0&amp;autopause=0&amp;player_id=0&amp;app_id=58479
Link to article: https://dotnettips.wordpress.com/2024/06/19/256-seconds-with-dotnetdave-documenting-code-with-visual-studio-and-copilot/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Collection Performance: Introducing FrozenSet in .NET 8: Benefits and Benchmark PerformanceCollection Performance</title>
      <link>https://www.dotnetramblings.com/post/16_06_2024/16_06_2024_0/</link>
      <pubDate>Sun, 16 Jun 2024 08:01:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/16_06_2024/16_06_2024_0/</guid>
      <description>
        
          
            .NET version 8 introduced the FrozenSet type, offering immutable and hashable set collection with benefits including improved performance, memory efficiency, and thread safety. Benchmarks show comparable performance to List, outperforming HashSet and ImmutableHashSet. However, it is slightly slower than the latter in lookups. FrozenSet offers significant advantages for concurrent applications and memory optimization.
Link to article: https://dotnettips.wordpress.com/2024/06/16/collection-performance-introducing-frozenset-in-net-8-benefits-and-benchmark-performancecollection-performance/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
