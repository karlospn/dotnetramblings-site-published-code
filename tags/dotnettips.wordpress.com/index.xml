<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotnettips.wordpress.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/</link>
    <description>Recent content in Dotnettips.wordpress.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Sun, 28 Sep 2025 06:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Boost Your .NET Projects: Simplify Unique Key Generation with KeyGenerator in Spargine</title>
      <link>https://www.dotnetramblings.com/post/28_09_2025/28_09_2025_0/</link>
      <pubDate>Sun, 28 Sep 2025 06:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/28_09_2025/28_09_2025_0/</guid>
      <description>
        
          
            The KeyGenerator in Spargine is an efficient tool for generating unique keys using GUIDs, ideal for object IDs and database records. It offers methods for creating keys with or without prefixes. This utility simplifies the process of generating unique keys, enhancing workflow in .NET projects, alongside the UlidGenerator for ULIDs.
Link to article: https://dotnettips.wordpress.com/2025/09/28/boost-your-net-projects-simplify-unique-key-generation-with-keygenerator-in-spargine/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Boost Your .NET Projects: Mastering ObservableList in Spargine</title>
      <link>https://www.dotnetramblings.com/post/21_09_2025/21_09_2025_0/</link>
      <pubDate>Sun, 21 Sep 2025 06:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/21_09_2025/21_09_2025_0/</guid>
      <description>
        
          
            ObservableList enhances the typical List by integrating event notifications for dynamic collection changes, making it ideal for MVVM applications in WPF, MAUI, and Xamarin. It supports multiple constructors, provides essential methods for collection management, and raises relevant events to keep UI synchronized, ensuring responsive and maintainable applications.
Link to article: https://dotnettips.wordpress.com/2025/09/21/boost-your-net-projects-mastering-observablelist-in-spargine/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
