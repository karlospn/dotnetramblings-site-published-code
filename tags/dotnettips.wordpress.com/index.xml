<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotnettips.wordpress.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/</link>
    <description>Recent content in Dotnettips.wordpress.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 24 Sep 2024 08:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Boosting Loop Performance in .NET: The Simple Trick of Caching Array Length</title>
      <link>https://www.dotnetramblings.com/post/24_09_2024/24_09_2024_11/</link>
      <pubDate>Tue, 24 Sep 2024 08:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/24_09_2024/24_09_2024_11/</guid>
      <description>
        
          
            The post discusses optimizing array iteration in programming by caching the array&#39;s length for performance improvements. This method yields a 1.021x performance boost, particularly beneficial for loops executed frequently. The author encourages this technique and recommends their book for more insights on enhancing .NET code performance.
Link to article: https://dotnettips.wordpress.com/2024/09/24/collection-performance-looping-over-a-collection-2/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Boost Your .NET Projects: Unleashing the Power of Spargineâ€™s Assembly Extensions</title>
      <link>https://www.dotnetramblings.com/post/22_09_2024/22_09_2024_0/</link>
      <pubDate>Sun, 22 Sep 2024 08:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/22_09_2024/22_09_2024_0/</guid>
      <description>
        
          
            Spargine, an open-source tool for .NET 8, offers enhanced methods like GetAllInterfaces, GetAllTypes, GetInstances, and GetTypes. These methods improve performance and reliability, with benchmark results available on GitHub. Community involvement is crucial for the project&#39;s success, so contributions and feedback are encouraged to make Spargine an essential tool for the .NET community. Contact dotnetdave@live.com for inquiries or contributions.
Link to article: https://dotnettips.wordpress.com/2024/09/22/boost-your-net-projects-unleashing-the-power-of-spargines-assembly-extensions/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
