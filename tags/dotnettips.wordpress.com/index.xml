<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotnettips.wordpress.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/</link>
    <description>Recent content in Dotnettips.wordpress.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Sun, 15 Sep 2024 08:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Boost Your .NET Projects: Unleashing the Power of Spargineâ€™s Array Extensions</title>
      <link>https://www.dotnetramblings.com/post/15_09_2024/15_09_2024_0/</link>
      <pubDate>Sun, 15 Sep 2024 08:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/15_09_2024/15_09_2024_0/</guid>
      <description>
        
          
            Spargine, an open-source .NET 8 toolset, offers a variety of extension methods for arrays. The project&#39;s author emphasizes the benefits of enhanced performance and reliability. Community involvement is sought for further improvements and contributions. Detailed benchmark results are available on GitHub, and users are encouraged to provide feedback and suggestions. Contact dotnetdave@live.com for inquiries or contributions.
Link to article: https://dotnettips.wordpress.com/2024/09/15/boost-your-net-projects-unleashing-the-power-of-spargines-array-extensions/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Optimizing Hash Code Generation in .NET: A Performance Comparison</title>
      <link>https://www.dotnetramblings.com/post/08_09_2024/08_09_2024_0/</link>
      <pubDate>Sun, 08 Sep 2024 08:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/08_09_2024/08_09_2024_0/</guid>
      <description>
        
          
            This article discusses the importance of hash codes in programming and optimization techniques in Microsoft .NET. It explores different methods for generating hash codes, with RuntimeHelpers.GetHashCode() identified as the fastest option. The article concludes by introducing a new extension method, FastGetHashCode(), for faster hash code generation in projects.
Link to article: https://dotnettips.wordpress.com/2024/09/08/optimizing-hash-code-generation-in-net-a-performance-comparison/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
