<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dotnettips.wordpress.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/</link>
    <description>Recent content in Dotnettips.wordpress.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Sun, 26 Jan 2025 13:40:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/dotnettips.wordpress.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Optimizing Dictionary Performance in .NET: SortedDictionary vs. Dictionary</title>
      <link>https://www.dotnetramblings.com/post/26_01_2025/26_01_2025_1/</link>
      <pubDate>Sun, 26 Jan 2025 13:40:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/26_01_2025/26_01_2025_1/</guid>
      <description>
        
          
            The article analyzes performance issues in .NET code using SortedDictionary. It recommends using Dictionary for single sorting needs and compares various sorting techniques. Benchmark results reveal that sorting keys separately and iterating is fastest, while SortedDictionary excels with foreach loops. Careful choice of dictionary type affects performance and memory allocation.
Link to article: https://dotnettips.wordpress.com/2025/01/26/optimizing-dictionary-performance-in-net-sorteddictionary-vs-dictionary/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
