<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Goatreview.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/goatreview.com/</link>
    <description>Recent content in Goatreview.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 20 May 2025 07:01:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/goatreview.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Performance Optimization in .NET Core with SSE and AVX2 Instructions</title>
      <link>https://www.dotnetramblings.com/post/20_05_2025/20_05_2025_10/</link>
      <pubDate>Tue, 20 May 2025 07:01:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/20_05_2025/20_05_2025_10/</guid>
      <description>
        
          
            In the realm of high-performance development, SIMD (Single Instruction, Multiple Data) instructions represent a considerable optimization lever. This article explores how SSE and AVX2 extensions can radically transform the performance of your .NET Core applications by enabling parallel data processing. The Fundamentals of SSE and AVX2 SSE (Streaming SIMD Extensions)
Link to article: https://goatreview.com/using-sse-avx2-instructions-csharp/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
