<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Goatreview.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/goatreview.com/</link>
    <description>Recent content in Goatreview.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 07 Jan 2025 09:00:27 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/goatreview.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building a High-Performance Message Queue with Redis Streams</title>
      <link>https://www.dotnetramblings.com/post/07_01_2025/07_01_2025_2/</link>
      <pubDate>Tue, 07 Jan 2025 09:00:27 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/07_01_2025/07_01_2025_2/</guid>
      <description>
        
          
            Beyond Pub/Sub: Implementing Reliable Work Distribution with Redis When developers reach for Redis as a messaging solution, they typically gravitate toward its Pub/Sub capabilities. While Pub/Sub excels at broadcasting messages to multiple subscribers, it falls short for reliable work distribution scenarios. Messages are transient - any offline
Link to article: https://goatreview.com/building-a-high-performance-message-queue-with-redis-streams/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
