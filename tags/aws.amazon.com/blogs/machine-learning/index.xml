<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aws.amazon.com/Blogs/Machine-Learning on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/aws.amazon.com/blogs/machine-learning/</link>
    <description>Recent content in Aws.amazon.com/Blogs/Machine-Learning on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 05 Aug 2025 01:17:30 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/aws.amazon.com/blogs/machine-learning/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Cost tracking multi-tenant model inference on Amazon Bedrock</title>
      <link>https://www.dotnetramblings.com/post/05_08_2025/05_08_2025_13/</link>
      <pubDate>Tue, 05 Aug 2025 01:17:30 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/05_08_2025/05_08_2025_13/</guid>
      <description>
        
          
            In this post, we demonstrate how to track and analyze multi-tenant model inference costs on Amazon Bedrock using the Converse API&#39;s requestMetadata parameter. The solution includes an ETL pipeline using AWS Glue and Amazon QuickSight dashboards to visualize usage patterns, token consumption, and cost allocation across different tenants and departments.
Link to article: https://aws.amazon.com/blogs/machine-learning/cost-tracking-multi-tenant-model-inference-on-amazon-bedrock/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>AI judging AI: Scaling unstructured text analysis with Amazon Nova</title>
      <link>https://www.dotnetramblings.com/post/04_08_2025/04_08_2025_2/</link>
      <pubDate>Mon, 04 Aug 2025 17:51:08 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/04_08_2025/04_08_2025_2/</guid>
      <description>
        
          
            In this post, we highlight how you can deploy multiple generative AI models in Amazon Bedrock to instruct an LLM model to create thematic summaries of text responses. We then show how to use multiple LLM models as a jury to review these LLM-generated summaries and assign a rating to judge the content alignment between the summary title and summary description.
Link to article: https://aws.amazon.com/blogs/machine-learning/ai-judging-ai-scaling-unstructured-text-analysis-with-amazon-nova/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Building an AI-driven course content generation system using Amazon Bedrock</title>
      <link>https://www.dotnetramblings.com/post/04_08_2025/04_08_2025_3/</link>
      <pubDate>Mon, 04 Aug 2025 17:46:30 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/04_08_2025/04_08_2025_3/</guid>
      <description>
        
          
            In this post, we explore each component in detail, along with the technical implementation of the two core modules: course outline generation and course content generation.
Link to article: https://aws.amazon.com/blogs/machine-learning/building-an-ai-driven-course-content-generation-system-using-amazon-bedrock/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>How Handmade.com modernizes product image and description handling with Amazon Bedrock and Amazon OpenSearch Service</title>
      <link>https://www.dotnetramblings.com/post/04_08_2025/04_08_2025_4/</link>
      <pubDate>Mon, 04 Aug 2025 17:21:16 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/04_08_2025/04_08_2025_4/</guid>
      <description>
        
          
            In this post, we explore how Handmade.com, a leading hand-crafts marketplace, modernized their product description handling by implementing an AI-driven pipeline using Amazon Bedrock and Amazon OpenSearch Service. The solution combines Anthropic&#39;s Claude 3.7 Sonnet LLM for generating descriptions, Amazon Titan Text Embeddings V2 for vector embedding, and semantic search capabilities to automate and enhance product descriptions across their catalog of over 60,000 items.
Link to article: https://aws.amazon.com/blogs/machine-learning/how-handmade-com-modernizes-product-image-and-description-handling-with-amazon-bedrock-and-amazon-opensearch-service/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Introducing Amazon Bedrock AgentCore Browser Tool</title>
      <link>https://www.dotnetramblings.com/post/01_08_2025/01_08_2025_0/</link>
      <pubDate>Fri, 01 Aug 2025 19:23:13 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/01_08_2025/01_08_2025_0/</guid>
      <description>
        
          
            In this post, we introduce the newly announced Amazon Bedrock AgentCore Browser Tool. We explore why organizations need cloud-based browser automation and the limitations it addresses for FMs that require real-time data access. We talk about key use cases and the core capabilities of the AgentCore Browser Tool. We walk through how to get started with the tool.
Link to article: https://aws.amazon.com/blogs/machine-learning/introducing-amazon-bedrock-agentcore-browser-tool/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Introducing the Amazon Bedrock AgentCore Code Interpreter</title>
      <link>https://www.dotnetramblings.com/post/01_08_2025/01_08_2025_1/</link>
      <pubDate>Fri, 01 Aug 2025 19:23:05 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/01_08_2025/01_08_2025_1/</guid>
      <description>
        
          
            In this post, we introduce the Amazon Bedrock AgentCore Code Interpreter, a fully managed service that enables AI agents to securely execute code in isolated sandbox environments. We discuss how the AgentCore Code Interpreter helps solve challenges around security, scalability, and infrastructure management when deploying AI agents that need computational capabilities.
Link to article: https://aws.amazon.com/blogs/machine-learning/introducing-the-amazon-bedrock-agentcore-code-interpreter/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Observing and evaluating AI agentic workflows with Strands Agents SDK and Arize AX</title>
      <link>https://www.dotnetramblings.com/post/01_08_2025/01_08_2025_3/</link>
      <pubDate>Fri, 01 Aug 2025 16:12:46 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/01_08_2025/01_08_2025_3/</guid>
      <description>
        
          
            In this post, we present how the Arize AX service can trace and evaluate AI agent tasks initiated through Strands Agents, helping validate the correctness and trustworthiness of agentic workflows.
Link to article: https://aws.amazon.com/blogs/machine-learning/observing-and-evaluating-ai-agentic-workflows-with-strands-agents-sdk-and-arize-ax/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Building AIOps with Amazon Q Developer CLI and MCP Server</title>
      <link>https://www.dotnetramblings.com/post/01_08_2025/01_08_2025_4/</link>
      <pubDate>Fri, 01 Aug 2025 15:23:07 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/01_08_2025/01_08_2025_4/</guid>
      <description>
        
          
            In this post, we discuss how to implement a low-code no-code AIOps solution that helps organizations monitor, identify, and troubleshoot operational events while maintaining their security posture. We show how these technologies work together to automate repetitive tasks, streamline incident response, and enhance operational efficiency across your organization.
Link to article: https://aws.amazon.com/blogs/machine-learning/building-aiops-with-amazon-q-developer-cli-and-mcp-server/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Containerize legacy Spring Boot application using Amazon Q Developer CLI and MCP server</title>
      <link>https://www.dotnetramblings.com/post/01_08_2025/01_08_2025_5/</link>
      <pubDate>Fri, 01 Aug 2025 15:22:58 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/01_08_2025/01_08_2025_5/</guid>
      <description>
        
          
            In this post, youâ€™ll learn how you can use Amazon Q Developer command line interface (CLI) with Model Context Protocol (MCP) servers integration to modernize a legacy Java Spring Boot application running on premises and then migrate it to Amazon Web Services (AWS) by deploying it on Amazon Elastic Kubernetes Service (Amazon EKS).
Link to article: https://aws.amazon.com/blogs/machine-learning/containerize-legacy-spring-boot-application-using-amazon-q-developer-cli-and-mcp-server/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Introducing AWS Batch Support for Amazon SageMaker Training jobs</title>
      <link>https://www.dotnetramblings.com/post/31_07_2025/31_07_2025_3/</link>
      <pubDate>Thu, 31 Jul 2025 17:44:31 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/31_07_2025/31_07_2025_3/</guid>
      <description>
        
          
            AWS Batch now seamlessly integrates with Amazon SageMaker Training jobs. In this post, we discuss the benefits of managing and prioritizing ML training jobs to use hardware efficiently for your business. We also walk you through how to get started using this new capability and share suggested best practices, including the use of SageMaker training plans.
Link to article: https://aws.amazon.com/blogs/machine-learning/introducing-aws-batch-support-for-amazon-sagemaker-training-jobs/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Structured outputs with Amazon Nova: A guide for builders</title>
      <link>https://www.dotnetramblings.com/post/31_07_2025/31_07_2025_4/</link>
      <pubDate>Thu, 31 Jul 2025 16:44:42 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/31_07_2025/31_07_2025_4/</guid>
      <description>
        
          
            We launched constrained decoding to provide reliability when using tools for structured outputs. Now, tools can be used with Amazon Nova foundation models (FMs) to extract data based on complex schemas, reducing tool use errors by over 95%. In this post, we explore how you can use Amazon Nova FMs for structured output use cases.
Link to article: https://aws.amazon.com/blogs/machine-learning/structured-outputs-with-amazon-nova-a-guide-for-builders/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>AI agents unifying structured and unstructured data: Transforming support analytics and beyond with Amazon Q Plugins</title>
      <link>https://www.dotnetramblings.com/post/31_07_2025/31_07_2025_5/</link>
      <pubDate>Thu, 31 Jul 2025 16:28:37 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/31_07_2025/31_07_2025_5/</guid>
      <description>
        
          
            Learn how to enhance Amazon Q with custom plugins to combine semantic search capabilities with precise analytics for AWS Support data. This solution enables more accurate answers to analytical questions by integrating structured data querying with RAG architecture, allowing teams to transform raw support cases and health events into actionable insights. Discover how this enhanced architecture delivers exact numerical analysis while maintaining natural language interactions for improved operational decision-making.
Link to article: https://aws.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Amazon Strands Agents SDK: A technical deep dive into agent architectures and observability</title>
      <link>https://www.dotnetramblings.com/post/31_07_2025/31_07_2025_6/</link>
      <pubDate>Thu, 31 Jul 2025 16:22:07 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/31_07_2025/31_07_2025_6/</guid>
      <description>
        
          
            In this post, we first introduce the Strands Agents SDK and its core features. Then we explore how it integrates with AWS environments for secure, scalable deployments, and how it provides rich observability for production use. Finally, we discuss practical use cases, and present a step-by-step example to illustrate Strands in action.
Link to article: https://aws.amazon.com/blogs/machine-learning/amazon-strands-agents-sdk-a-technical-deep-dive-into-agent-architectures-and-observability/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Build dynamic web research agents with the Strands Agents SDK and Tavily</title>
      <link>https://www.dotnetramblings.com/post/31_07_2025/31_07_2025_9/</link>
      <pubDate>Thu, 31 Jul 2025 14:35:10 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/31_07_2025/31_07_2025_9/</guid>
      <description>
        
          
            In this post, we introduce how to combine Strands Agents with Tavilyâ€™s purpose-built web intelligence API, to create powerful research agents that excel at complex information gathering tasks while maintaining the security and compliance standards required for enterprise deployment.
Link to article: https://aws.amazon.com/blogs/machine-learning/build-dynamic-web-research-agents-with-the-strands-agents-sdk-and-tavily/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Automate the creation of handout notes using Amazon Bedrock Data Automation</title>
      <link>https://www.dotnetramblings.com/post/30_07_2025/30_07_2025_3/</link>
      <pubDate>Wed, 30 Jul 2025 16:22:27 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/30_07_2025/30_07_2025_3/</guid>
      <description>
        
          
            In this post, we show how you can build an automated, serverless solution to transform webinar recordings into comprehensive handouts using Amazon Bedrock Data Automation for video analysis. We walk you through the implementation of Amazon Bedrock Data Automation to transcribe and detect slide changes, as well as the use of Amazon Bedrock foundation models (FMs) for transcription refinement, combined with custom AWS Lambda functions orchestrated by AWS Step Functions.
          
          
        
      </description>
    </item>
    
    <item>
      <title>Streamline GitHub workflows with generative AI using Amazon Bedrock and MCP</title>
      <link>https://www.dotnetramblings.com/post/30_07_2025/30_07_2025_4/</link>
      <pubDate>Wed, 30 Jul 2025 16:16:30 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/30_07_2025/30_07_2025_4/</guid>
      <description>
        
          
            This blog post explores how to create powerful agentic applications using the Amazon Bedrock FMs, LangGraph, and the Model Context Protocol (MCP), with a practical scenario of handling a GitHub workflow of issue analysis, code fixes, and pull request generation.
Link to article: https://aws.amazon.com/blogs/machine-learning/streamline-github-workflows-with-generative-ai-using-amazon-bedrock-and-mcp/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Generate suspicious transaction report drafts for financial compliance using generative AI</title>
      <link>https://www.dotnetramblings.com/post/29_07_2025/29_07_2025_0/</link>
      <pubDate>Tue, 29 Jul 2025 18:57:44 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/29_07_2025/29_07_2025_0/</guid>
      <description>
        
          
            A suspicious transaction report (STR) or suspicious activity report (SAR) is a type of report that a financial organization must submit to a financial regulator if they have reasonable grounds to suspect any financial transaction that has occurred or was attempted during their activities. In this post, we explore a solution that uses FMs available in Amazon Bedrock to create a draft STR.
Link to article: https://aws.amazon.com/blogs/machine-learning/generate-suspicious-transaction-report-drafts-for-financial-compliance-using-generative-ai/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Fine-tune and deploy Meta Llama 3.2 Vision for generative AI-powered web automation using AWS DLCs, Amazon EKS, and Amazon Bedrock</title>
      <link>https://www.dotnetramblings.com/post/29_07_2025/29_07_2025_1/</link>
      <pubDate>Tue, 29 Jul 2025 18:55:23 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/29_07_2025/29_07_2025_1/</guid>
      <description>
        
          
            In this post, we present a complete solution for fine-tuning and deploying the Llama-3.2-11B-Vision-Instruct model for web automation tasks. We demonstrate how to build a secure, scalable, and efficient infrastructure using AWS Deep Learning Containers (DLCs) on Amazon Elastic Kubernetes Service (Amazon EKS).
Link to article: https://aws.amazon.com/blogs/machine-learning/fine-tune-and-deploy-meta-llama-3-2-vision-for-generative-ai-powered-web-automation-using-aws-dlcs-amazon-eks-and-amazon-bedrock/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>How Nippon India Mutual Fund improved the accuracy of AI assistant responses using advanced RAG methods on Amazon Bedrock</title>
      <link>https://www.dotnetramblings.com/post/29_07_2025/29_07_2025_9/</link>
      <pubDate>Tue, 29 Jul 2025 14:57:29 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/29_07_2025/29_07_2025_9/</guid>
      <description>
        
          
            In this post, we examine a solution adopted by Nippon Life India Asset Management Limited that improves the accuracy of the response over a regular (naive) RAG approach by rewriting the user queries and aggregating and reranking the responses. The proposed solution uses enhanced RAG methods such as reranking to improve the overall accuracy
Link to article: https://aws.amazon.com/blogs/machine-learning/how-nippon-india-mutual-fund-improved-the-accuracy-of-ai-assistant-responses-using-advanced-rag-methods-on-amazon-bedrock/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
