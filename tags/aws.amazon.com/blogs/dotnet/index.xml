<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aws.amazon.com/Blogs/Dotnet on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/aws.amazon.com/blogs/dotnet/</link>
    <description>Recent content in Aws.amazon.com/Blogs/Dotnet on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Fri, 27 Jun 2025 21:14:25 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/aws.amazon.com/blogs/dotnet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Integrating C# Model Context Protocol servers with Amazon Q Developer CLI</title>
      <link>https://www.dotnetramblings.com/post/27_06_2025/27_06_2025_0/</link>
      <pubDate>Fri, 27 Jun 2025 21:14:25 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/27_06_2025/27_06_2025_0/</guid>
      <description>
        
          
            This post shows how to create your own Model Context Protocol (MCP) server with C# and .NET. You will use Amazon Q Developer Command-Line Interface (Amazon Q CLI) as an MCP client. The Model Context Protocol (MCP) is an open standard that lets Artificial Intelligence (AI) models safely interact with external tools and resources. MCP enhances […]
Link to article: https://aws.amazon.com/blogs/dotnet/integrating-c-model-context-protocol-servers-with-amazon-q-developer-cli/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
