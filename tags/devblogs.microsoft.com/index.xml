<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devblogs.microsoft.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/devblogs.microsoft.com/</link>
    <description>Recent content in Devblogs.microsoft.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Thu, 24 Jul 2025 14:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/devblogs.microsoft.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How can I wait until a named object (say a mutex) is created?</title>
      <link>https://www.dotnetramblings.com/post/24_07_2025/24_07_2025_3/</link>
      <pubDate>Thu, 24 Jul 2025 14:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/24_07_2025/24_07_2025_3/</guid>
      <description>
        
          
            A customer used a named mutex as a way to detect that another instance of the program is already running. This is pretty standard. They also used the presence of the mutex to indicate that the program is ready to receive work requests: When the program creates the mutex, this prevents new instances from running, and it also announce
Link to article: https://devblogs.microsoft.com/oldnewthing/20250724-00/?p=111406 
          
          
        
      </description>
    </item>
    
    <item>
      <title>MSSQL Extension for VS Code: Agent Mode Updates, Colored Connections, and Schema Designer Enhancements</title>
      <link>https://www.dotnetramblings.com/post/23_07_2025/23_07_2025_0/</link>
      <pubDate>Wed, 23 Jul 2025 22:34:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/23_07_2025/23_07_2025_0/</guid>
      <description>
        
          
            The MSSQL Extension for VS Code keeps getting better—bringing thoughtful updates that make SQL development more conversational, more visual, and more local. In version v1.34.0, we’ve focused this release on deepening
Link to article: https://devblogs.microsoft.com/azure-sql/vscode-mssql-agent-mode-updates 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Can You Build Agent2Agent Communication on MCP? Yes!</title>
      <link>https://www.dotnetramblings.com/post/23_07_2025/23_07_2025_3/</link>
      <pubDate>Wed, 23 Jul 2025 17:00:19 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/23_07_2025/23_07_2025_3/</guid>
      <description>
        
          
            MCP has evolved significantly beyond its original goal of &amp;quot;providing context to LLMs.&amp;quot; With recent enhancements including resumable streams, elicitation,
Link to article: https://devblogs.microsoft.com//can-you-build-agent2agent-communication-on-mcp-yes 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Exploring possible solutions to the inconsistency in how Windows searches case-insensitively for named resources</title>
      <link>https://www.dotnetramblings.com/post/23_07_2025/23_07_2025_8/</link>
      <pubDate>Wed, 23 Jul 2025 14:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/23_07_2025/23_07_2025_8/</guid>
      <description>
        
          
            Some time ago, I explained why Windows has trouble finding Win32 resources with accented characters. It boils down to an ambiguity in the Portable Executable sp
Link to article: https://devblogs.microsoft.com/oldnewthing/20250723-00/?p=111403 
          
          
        
      </description>
    </item>
    
    <item>
      <title>MCP C# SDK Gets Major Update: Support for Protocol Version 2025-06-18</title>
      <link>https://www.dotnetramblings.com/post/22_07_2025/22_07_2025_0/</link>
      <pubDate>Tue, 22 Jul 2025 17:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/22_07_2025/22_07_2025_0/</guid>
      <description>
        
          
            The Model Context Protocol (MCP) continues to evolve, and we&#39;re excited to announce that the MCP C# SDK now supports the latest specification version 2025-06-18. This update brings significant new capabilities to .NET developers building AI applications, including an imp
Link to article: https://devblogs.microsoft.com/dotnet/mcp-csharp-sdk-2025-06-18-update 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Fresh Learning Paths Now Available on Pluralsight for VS Subscribers</title>
      <link>https://www.dotnetramblings.com/post/22_07_2025/22_07_2025_4/</link>
      <pubDate>Tue, 22 Jul 2025 14:00:40 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/22_07_2025/22_07_2025_4/</guid>
      <description>
        
          
            We’ve been thrilled to see so many of you jump back into your Pluralsight benefit after our April 3rd announcement about extended access. Your enthusiasm for learning and leveling up with Visual Studio inspires us every day. If you
Link to article: https://devblogs.microsoft.com/visualstudio/vss-pluralsight-2025-2 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Being more adamant about reporting that C&#43;&#43;/WinRT was unable to resume execution on a dispatcher thread</title>
      <link>https://www.dotnetramblings.com/post/22_07_2025/22_07_2025_5/</link>
      <pubDate>Tue, 22 Jul 2025 14:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/22_07_2025/22_07_2025_5/</guid>
      <description>
        
          
            Last time, we saw what happens if C++/WinRT is unable to resume execution on a dispatcher thread: If you use winrt::resume_foreground with a
Link to article: https://devblogs.microsoft.com/oldnewthing/20250722-00/?p=111400 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Java OpenJDK July 2025 Patch &amp; Security Update</title>
      <link>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_1/</link>
      <pubDate>Mon, 21 Jul 2025 22:07:07 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_1/</guid>
      <description>
        
          
            Hello Java customers! We are happy to announce the latest July 2025 patch &amp;amp; security update release for the Microsoft Build of OpenJDK. Download and install the binaries today. OpenJDK 21.0.8 OpenJDK 17.0.16 OpenJDK 11.0.28 Check our
Link to article: https://devblogs.microsoft.com/java/java-openjdk-july-2025-patch-security-update 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Ask Mode vs Agent Mode - Choosing the Right Copilot Experience for .NET</title>
      <link>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_5/</link>
      <pubDate>Mon, 21 Jul 2025 17:05:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_5/</guid>
      <description>
        
          
            As a .NET developer, productivity and problem-solving are at the heart of your workflow. GitHub Copilot Chat offers two powerful modes, Ask Mode and Agent Mode, that can dramatically accelerate your development, but knowing when to use each is essential to getting the most out of this tool. In this post, we’ll break down the differences,
Link to article: https://devblogs.microsoft.com/dotnet/ask-mode-vs-agent-mode 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Build Smarter with the Microsoft 365 Agents Toolkit MCP Server</title>
      <link>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_6/</link>
      <pubDate>Mon, 21 Jul 2025 17:00:56 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_6/</guid>
      <description>
        
          
            As AI agents become central to how we build and interact with modern productivity apps, developers need tools that are flexible, standard-based, and deeply integrated with AI. That’s where the Microsoft 365 Agents Toolkit MCP Server
Link to article: https://devblogs.microsoft.com/microsoft365dev/build-smarter-with-the-microsoft-365-agents-toolkit-mcp-server 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Azure Developer CLI: From Dev to Prod with One Click</title>
      <link>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_7/</link>
      <pubDate>Mon, 21 Jul 2025 16:17:37 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_7/</guid>
      <description>
        
          
            This post walks through how to implement a &amp;quot;build once, deploy everywhere&amp;quot; pattern using Azure Developer CLI (azd) that provisions environment-specific infrastructure and promotes applications from dev to prod with t
Link to article: https://devblogs.microsoft.com/devops/azure-developer-cli-from-dev-to-prod-with-one-click 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Integration testing for Go applications using Testcontainers and containerized databases</title>
      <link>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_8/</link>
      <pubDate>Mon, 21 Jul 2025 15:55:28 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_8/</guid>
      <description>
        
          
            Integration testing has always presented a fundamental challenge: how do you test your application against real dependencies without the complexity of managing external services? Traditional approaches often involve either mocking dependencies (which can miss integration issues) or maintaining separate test environments (which can be expensive
Link to article: https://devblogs.microsoft.com/cosmosdb/integration-testing-for-go-applications-using-testcontainers-and-containerized-databases 
          
          
        
      </description>
    </item>
    
    <item>
      <title>What happens if C&#43;&#43;/WinRT is unable to resume execution on a dispatcher thread?</title>
      <link>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_9/</link>
      <pubDate>Mon, 21 Jul 2025 14:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_9/</guid>
      <description>
        
          
            The C++/WinRT library provides the winrt::resume_foreground() function for resuming a coroutine on the foreground thread of a dispatcher. It supports three types of dispatchers: Windows.UI.Core.CoreDispatcher, Windows.System.DispatcherQueue, Micros
Link to article: https://devblogs.microsoft.com/oldnewthing/20250721-00/?p=111396 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Visual Studio Code CMake Tools Extension 1.21 Release: Multi-root improvements, CMake Presets v10, and more…</title>
      <link>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_10/</link>
      <pubDate>Mon, 21 Jul 2025 12:10:34 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_10/</guid>
      <description>
        
          
            We’re excited to announce the latest 1.21 release of the CMake Tools extension for Visual Studio Code. This update brings a host of new updates, including addressing one of our top-voted issues for multi-root improvements and adding
Link to article: https://devblogs.microsoft.com/cppblog/visual-studio-code-cmake-tools-extension-1-21-release-multi-root-improvements-cmake-presets-v10-and-more 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Guest Blog: Building Multi-Agent Solutions with Semantic Kernel and A2A Protocol</title>
      <link>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_13/</link>
      <pubDate>Mon, 21 Jul 2025 08:10:23 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/21_07_2025/21_07_2025_13/</guid>
      <description>
        
          
            In the rapidly evolving landscape of AI application development, the ability to orchestrate multiple intelligent agents has become crucial for building sophisticated, enterprise-grade solutions. While individual AI agents excel at specific tasks, complex business scenarios often require coordination between specialized agents running on differ
Link to article: https://devblogs.microsoft.com/semantic-kernel/guest-blog-building-multi-agent-solutions-with-semantic-kernel-and-a2a-protocol 
          
          
        
      </description>
    </item>
    
    <item>
      <title>The case of the invalid instruction exception on an instruction that should never have executed</title>
      <link>https://www.dotnetramblings.com/post/18_07_2025/18_07_2025_3/</link>
      <pubDate>Fri, 18 Jul 2025 14:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/18_07_2025/18_07_2025_3/</guid>
      <description>
        
          
            The image processing folks added specialized AVX2 versions of their code, but found that it was crashing with an illegal instruction exception. The code went something like this: void SwizzleAVX2(uint32_t* source, uint32_t* destination, uint32_t count) { ⟦ do stuff using AVX-only instructions ⟧ ⟦ such as _mm256_cv
Link to article: https://devblogs.microsoft.com/oldnewthing/20250718-00/?p=111390 
          
          
        
      </description>
    </item>
    
    <item>
      <title>AI Model Promotion with dstoolkit-mlops-v2</title>
      <link>https://www.dotnetramblings.com/post/18_07_2025/18_07_2025_6/</link>
      <pubDate>Fri, 18 Jul 2025 07:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/18_07_2025/18_07_2025_6/</guid>
      <description>
        
          
            Introduction In a recent engagement, our team of Data Scientists and Software Engineers, developed a series of custom AI models to meet our customer&#39;s specific use case. While doing so, consideration was given to how best to allow Data Scientists the freedom to quickly experiment and iterate on model development, while also incorpora
Link to article: https://devblogs.microsoft.com/ise/ai-model-promotion-with-dstoolkit-v2 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Build reliable Go applications: Configuring Azure Cosmos DB Go SDK for real-world scenarios</title>
      <link>https://www.dotnetramblings.com/post/17_07_2025/17_07_2025_4/</link>
      <pubDate>Thu, 17 Jul 2025 16:50:15 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/17_07_2025/17_07_2025_4/</guid>
      <description>
        
          
            When building applications that interact with databases, developers frequently encounter scenarios where default SDK configurations don&#39;t align with their specific operational requirements. They need to customize SDK behavior to address real-world challenges like network instability, performance bottlenecks, debugging complexity, monitoring re
Link to article: https://devblogs.microsoft.com/cosmosdb/build-reliable-go-applications-configuring-azure-cosmos-db-go-sdk-for-real-world-scenarios 
          
          
        
      </description>
    </item>
    
    <item>
      <title>If the Window Runtime PropertyValue is for boxing non-inspectables, why is there a PropertyValue.CreateInspectable?</title>
      <link>https://www.dotnetramblings.com/post/17_07_2025/17_07_2025_6/</link>
      <pubDate>Thu, 17 Jul 2025 14:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/17_07_2025/17_07_2025_6/</guid>
      <description>
        
          
            The Windows Runtime provides a class named Property­Value which is a helper class for boxing non-inspectables. &amp;quot;Boxing&amp;quot; means taking a value type and wrapping inside an object so it can be used as an object type, and in the Windows Runtime, &amp;quot;objects&amp;quot; are represented by the IInspectable interface. There are
Link to article: https://devblogs.microsoft.com/oldnewthing/20250717-00/?p=111388 
          
          
        
      </description>
    </item>
    
    <item>
      <title>Command GitHub&#39;s Coding Agent from VS Code</title>
      <link>https://www.dotnetramblings.com/post/17_07_2025/17_07_2025_14/</link>
      <pubDate>Thu, 17 Jul 2025 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/17_07_2025/17_07_2025_14/</guid>
      <description>
        
          
            VS Code&#39;s integration with GitHub Copilot Coding Agent allows you to delegate tasks to the agent and let it handle them in the background. Read the full article
Link to article: https://devblogs.microsoft.com/vscode-blog/command-github&#39;s-coding-agent-from-vs-code 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
