<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Codeopinion.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/codeopinion.com/</link>
    <description>Recent content in Codeopinion.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Wed, 09 Oct 2024 21:49:26 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/codeopinion.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Web-Queue-Worker Architecture Style for Scaling</title>
      <link>https://www.dotnetramblings.com/post/09_10_2024/09_10_2024_2/</link>
      <pubDate>Wed, 09 Oct 2024 21:49:26 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/09_10_2024/09_10_2024_2/</guid>
      <description>
        
          
            Web-Queue-Worker is an excellent architecture pattern you can add to your toolbox. It’s just a pattern and can work with a monolith, modular monolith, microservices, or whatever. It provides many benefits for scaling by moving work into the background and if you have long-running jobs, workflows, or even recurring batch jobs. YouTube Check out my YouTube… Read More »Web-Queue-Worker Architecture Style for Scaling The post Web-Queue-Worker Architecture Style for Scaling appeared first on CodeOpinion.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
