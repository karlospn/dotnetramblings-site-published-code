<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mytechramblings.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/mytechramblings.com/</link>
    <description>Recent content in Mytechramblings.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Wed, 10 Jul 2024 10:00:57 +0200</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/mytechramblings.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Code Coverage in .NET</title>
      <link>https://www.dotnetramblings.com/post/10_07_2024/10_07_2024_1/</link>
      <pubDate>Wed, 10 Jul 2024 10:00:57 +0200</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/10_07_2024/10_07_2024_1/</guid>
      <description>
        
          
            This post delves into the current .NET landscape when we aim to collect Code Coverage. We examine the most frequently used tools such as Coverlet, dotCover, and dotnet-coverage, among others. We discuss how to upload a Code Coverage report to a SaaS product like SonarQube. Lastly, we explain how to publish a Code Coverage report into an Azure Pipeline run or a GitHub Action.
Link to article: https://www.mytechramblings.com/posts/code-coverage-in-dotnet/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
