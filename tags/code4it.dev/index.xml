<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code4it.dev on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/code4it.dev/</link>
    <description>Recent content in Code4it.dev on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 21 Jan 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/code4it.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C# Tip: How to create Custom Attributes, and why they are useful</title>
      <link>https://www.dotnetramblings.com/post/21_01_2025/21_01_2025_5/</link>
      <pubDate>Tue, 21 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/21_01_2025/21_01_2025_5/</guid>
      <description>
        
          
            Applying custom attributes to C# classes and interfaces can be useful for several reasons. Let’s learn how to create Custom Attributes in C#, and let’s explore some practical usage!
Link to article: https://www.code4it.dev/csharptips/create-custom-csharp-attributes/ 
          
          
        
      </description>
    </item>
    
    <item>
      <title>HTTP Logging in ASP.NET: how to automatically log all incoming HTTP requests (and its downsides!)</title>
      <link>https://www.dotnetramblings.com/post/14_01_2025/14_01_2025_12/</link>
      <pubDate>Tue, 14 Jan 2025 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/14_01_2025/14_01_2025_12/</guid>
      <description>
        
          
            Aren’t you tired of adding manual logs to your HTTP APIs to log HTTP requests and responses? By using a built-in middleware in ASP.NET, you will be able to centralize logs management and have a clear view of all the incoming HTTP requests.
Link to article: https://www.code4it.dev/blog/httplogging-asp-net/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
