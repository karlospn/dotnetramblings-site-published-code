<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code4it.dev on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/code4it.dev/</link>
    <description>Recent content in Code4it.dev on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Tue, 15 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/code4it.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C# Tip: IEnumerable vs ICollection, and why it matters</title>
      <link>https://www.dotnetramblings.com/post/15_10_2024/15_10_2024_1/</link>
      <pubDate>Tue, 15 Oct 2024 00:00:00 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/15_10_2024/15_10_2024_1/</guid>
      <description>
        
          
            When working with Lists in C#, you are working on a data structure that implements both ICollection and IEnumerable. Whatâ€™s the difference between ICollection and IEnumerable? Why should you care about them, especially when exposing functionalities to external clients?
Link to article: https://www.code4it.dev/csharptips/ienumerable-vs-icollection/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
