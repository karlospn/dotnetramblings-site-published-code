<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jeremydmiller.com on .NET Ramblings</title>
    <link>https://www.dotnetramblings.com/tags/jeremydmiller.com/</link>
    <description>Recent content in Jeremydmiller.com on .NET Ramblings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>.NET Ramblings</copyright>
    <lastBuildDate>Thu, 31 Jul 2025 19:11:32 +0000</lastBuildDate><atom:link href="https://www.dotnetramblings.com/tags/jeremydmiller.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Improved Declarative Persistence in Wolverine</title>
      <link>https://www.dotnetramblings.com/post/31_07_2025/31_07_2025_0/</link>
      <pubDate>Thu, 31 Jul 2025 19:11:32 +0000</pubDate>
      
      <guid>https://www.dotnetramblings.com/post/31_07_2025/31_07_2025_0/</guid>
      <description>
        
          
            To continue a consistent theme about how Wolverine is becoming the antidote to high ceremony Clean/Onion Architecture approaches, Wolverine 4.8 added some significant improvements to its declarative persistence support (partially after seeing how a recent JasperFx Software client was encountering a little bit of repetitive code). A pattern I try to encourage — and many … Continue reading Improved Declarative Persistence in Wolverine →
Link to article: https://jeremydmiller.com/2025/07/31/improved-declarative-persistence-in-wolverine/ 
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
